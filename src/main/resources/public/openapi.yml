openapi: "3.0.3"

info:
  version: 1.0.0
  title: McElMusic API
  description: Music Metadata Service for ICE Services application

paths:
  /track/{trackId}:
    parameters:
      - in: path
        name: trackId
        description: The ID of the track, which must already exist.
        required: true
        example: 8f89510a-1c28-44d5-87ad-1ca2121d9374
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Tracks
      summary: Get Track By ID
      description: Gets information about a track by ID
      responses:
        '200':
          description: Track found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '404':
          description: Track not found
    patch:
      tags:
        - Tracks
      summary: Update Track
      description: Update the metadata for a particular track
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - version
              properties:
                version:
                  type: integer
                  minimum: 0
                  description: The latest known version of the track record. Used to
                    detect conflicts between concurrent updates.
                title:
                  type: string
                  example: Breathe (In The Air)
                artists:
                  type: array
                  items:
                    type: string
                    format: uuid
                genreId:
                  type: string
                  format: uuid
                lengthSeconds:
                  type: integer
                  minimum: 1
                  example: 169
      responses:
        '200':
          description: Track updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '404':
          description: Track not found
        '409':
          description: Track version conflict
    delete:
      tags:
        - Tracks
      summary: Delete Track
      description: Delete an existing track
      responses:
        '204':
          description: Track deleted successfully
        '404':
          description: Track not found
  /track:
    put:
      tags:
        - Tracks
      summary: Create Track
      description: Adds a track to the metadata service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - artists
                - lengthSeconds
              properties:
                title:
                  type: string
                  example: Breathe (In The Air)
                artists:
                  type: array
                  items:
                    type: string
                    format: uuid
                genreId:
                  type: string
                  format: uuid
                lengthSeconds:
                  type: integer
                  minimum: 1
                  example: 169
      responses:
        '200':
          description: Track created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Invalid parameters
  /artist/{artistId}:
    parameters:
      - in: path
        name: artistId
        description: The ID of the artist, which must already exist.
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Artists
      summary: Get Artist By ID
      description: Gets information about an artist by ID
      responses:
        '200':
          description: Artist found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '404':
          description: Artist not found
    patch:
      tags:
        - Artists
      summary: Update Artist
      description: Updates the metadata for a particular artist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - version
              properties:
                version:
                  type: integer
                  minimum: 0
                  description: The latest known version of the artist record. Used to
                    detect conflicts between concurrent updates.
                name:
                  type: string
                  example: Pink Floyd
                profilePictureUrl:
                  type: string
      responses:
        '200':
          description: Artist updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '404':
          description: Artist not found
        '409':
          description: Artist version conflict
    delete:
      tags:
        - Artists
      summary: Delete Artist
      description: Deletes an artist from the metadata service.
      responses:
        '204':
          description: Artist deleted successfully
        '404':
          description: Artist not found
  /artist:
    put:
      tags:
        - Artists
      summary: Create Artist
      description: Adds an artist to the metadata service.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: The primary name of the artist.
                  example: Pink Floyd
                aliases:
                  type: array
                  description: A list of aliases the artist is known by.
                  items:
                    type: string
                profilePictureUrl:
                  type: string
                  description: The location of the artist's profile picture.
                  format: url
      responses:
        '200':
          description: Artist created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Invalid parameters
  /artist/today:
    get:
      tags:
        - Artists
      summary: Get Artist of the Day
      description: Gets the Artist of the Day for the current date in local time.
      responses:
        '200':
          description: Artist of the Day found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '404':
          description: No artists found in the metadata service

components:
  schemas:
    Track:
      type: object
      required:
        - id
        - version
        - title
        - artists
        - genreId
        - lengthSeconds
      properties:
        id:
          type: string
          format: uuid
          example: 8f89510a-1c28-44d5-87ad-1ca2121d9374
        version:
          type: integer
          description: The latest known version of the track record. Used to
            detect conflicts between concurrent updates.
        title:
          type: string
          example: Moth
        artists:
          type: array
          items:
            type: string
            format: uuid
        genreId:
          type: string
          format: uuid
        lengthSeconds:
          type: integer
          minimum: 1
          example: 560
    Artist:
      type: object
      required:
        - id
        - version
        - name
      properties:
        id:
          type: string
          format: uuid
          example: db756ca1-5b1f-46ac-873a-743ec75afa0b
        version:
          type: integer
          minimum: 1
          description: The latest known version of the artist record. Used to
            detect conflicts between concurrent updates.
        name:
          type: string
          description: The primary name of the artist.
          example: Four Tet
        aliases:
          type: array
          description: A list of aliases the artist is known by.
          example:
            - KH
            - "⣎⡇ꉺლ༽இ•̛)ྀ◞ ༎ຶ ༽ৣৢ؞ৢ؞ؖ ꉺლ"
          items:
            type: string
        profilePictureUrl:
          type: string
          description: The location of the artist's profile picture.
          format: url
          example: https://i.scdn.co/image/ab6761610000517484e29d09b4917bec2700a0d7

